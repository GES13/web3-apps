{-# STDLIB_VERSION 4 #-}
{-# CONTENT_TYPE DAPP #-}
{-# SCRIPT_TYPE ACCOUNT #-}

let alicePubKey = base58'rxxVt9daZZBr7ntnfKwnF1VZrTpNBB4pQNve5tyYSSW'
let bobPubKey = base58'2vmHtjTNLkTQ1z7XRRdWxrUTuXKHXsob3ii8MdckJ8ze'
let starkPubKey = base58'HQ253ezhxEjtpc2HQtT53kAer6bdxuLzr1pYWiqVxbAS'

#total signatures needed
let multiSigCount = 2

#Check signature
func checkSign(tx: Transaction, pubKey: ByteVector) = {
    if(sigVerify(tx.bodyBytes, tx.proofs[0], pubKey) || sigVerify(tx.bodyBytes, tx.proofs[1], pubKey) || sigVerify(tx.bodyBytes, tx.proofs[2], pubKey)) then 1 else 0
}

#Check 3 pubKey
func getMultiSigValue(tx: Transaction) = {
    let aliceSig = checkSign(tx, alicePubKey)
    let bobSig = checkSign(tx, bobPubKey)
    let starkSig = checkSign(tx, starkPubKey)
    aliceSig + bobSig + starkSig
}

@Verifier(tx)
func verify() = {
    match tx {
        case t: SetScriptTransaction => sigVerify(t.bodyBytes, t.proofs[0], alicePubKey) 
        case td: TransferTransaction => getMultiSigValue(td) >= multiSigCount 
        case _ => false 
      }
}